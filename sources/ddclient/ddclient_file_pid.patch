--- a/ddclient
+++ b/ddclient
@@ -25,6 +25,7 @@
 use Getopt::Long;
 use Sys::Hostname;
 use IO::Socket;
+use File::Pid;
 
 # my ($VERSION) = q$Revision: 184 $ =~ /(\d+)/;
 
@@ -36,6 +37,7 @@
 my $now       = time;
 my $hostname  = hostname();
 my $etc       = ($program =~ /test/i) ? './'   : '/etc/ddclient/';
+my $run       = ($program =~ /test/i) ? './'   : '/var/run/';
 my $cachedir  = ($program =~ /test/i) ? './'   : '/var/cache/ddclient/';
 my $savedir   = ($program =~ /test/i) ? 'URL/' : '/tmp/';
 my $msgs      = '';
@@ -326,7 +328,7 @@
 	'foreground'          => setv(T_BOOL,  0, 0, 1, 0,                    undef),
 	'file'                => setv(T_FILE,  0, 0, 1, "$etc$program.conf",  undef),
 	'cache'               => setv(T_FILE,  0, 0, 1, "$cachedir$program.cache", undef),
-	'pid'                 => setv(T_FILE,  0, 0, 1, "",                   undef),
+	'pid'                 => setv(T_FILE,  0, 0, 1, "$run$program.pid",   undef),
 	'proxy'               => setv(T_FQDNP, 0, 0, 1, '',                   undef),
 	'protocol'            => setv(T_PROTO, 0, 0, 1, 'dyndns2',            undef),
 
@@ -742,6 +744,7 @@
 if (opt('foreground') || opt('force')) {
     ;
 } elsif (opt('daemon')) {
+    test_pid();
     $SIG{'CHLD'}   = 'IGNORE';
     my $pid = fork;
     if ($pid < 0) {
@@ -758,6 +761,7 @@
 
 # write out the pid file if we're daemon'ized
 if(opt('daemon')) { 
+    test_pid();
     write_pid();
     $opt{'syslog'} = 1;
 }
@@ -816,7 +820,9 @@
 } while ($daemon && !$result && !$caught_term && !$caught_kill);
 
 warning("caught SIGKILL; exiting") if $caught_kill;
-unlink_pid();
+if(opt('daemon')) { 
+    unlink_pid();
+}
 sendmail();
 
 exit($result);
@@ -896,6 +902,33 @@
 	write_cache(opt('cache'));
 }
 ######################################################################
+## test_pid()
+######################################################################
+sub test_pid {
+    if (opt('daemon')) {
+        my $file = opt('pid');
+
+        if ($file && -e "$file") {
+
+            local *FD;
+    	    if (! open(FD, ">> $file")) {
+                fatal("pid file '%s' is not writeable. ($!)\n", $file);
+            } else {
+                close(FD);
+            }
+
+            my $pidfile = File::Pid->new({
+                file => "$file",
+            });
+
+            if (my $num = $pidfile->running) {
+               fatal("program with PID $num from pid file '%s' already running\n", $file);
+            }
+        }
+    }
+}
+
+######################################################################
 ## unlink_pid()
 ######################################################################
 sub unlink_pid {
@@ -913,7 +946,7 @@
     if ($file && opt('daemon')) {	
         local *FD;
 	if (! open(FD, "> $file")) {
-	    warning("Cannot create file '%s'. ($!)", $file);
+	    fatal("Cannot create file '%s'. ($!)", $file);
 
     	} else {
        	    printf FD "$$\n";
