--- a/cmake/zlib.cmake
+++ b/cmake/zlib.cmake
@@ -48,28 +48,56 @@
   IF(WITH_ZLIB STREQUAL "bundled")
     MYSQL_USE_BUNDLED_ZLIB()
   ELSE()
-    SET(ZLIB_FIND_QUIETLY TRUE)
-    INCLUDE(FindZLIB)
-    IF(ZLIB_FOUND)
-     INCLUDE(CheckFunctionExists)
-      SET(CMAKE_REQUIRED_LIBRARIES z)
-      CHECK_FUNCTION_EXISTS(crc32 HAVE_CRC32)
-      CHECK_FUNCTION_EXISTS(compressBound HAVE_COMPRESSBOUND)
-      CHECK_FUNCTION_EXISTS(deflateBound HAVE_DEFLATEBOUND)
-      SET(CMAKE_REQUIRED_LIBRARIES)
-      IF(HAVE_CRC32 AND HAVE_COMPRESSBOUND AND HAVE_DEFLATEBOUND)
+    if(ZLIB_INCLUDE_DIR AND ZLIB_LIBRARY AND EXISTS "${ZLIB_INCLUDE_DIR}/zlib.h" AND EXISTS "${ZLIB_LIBRARY}")
+        file(STRINGS "${ZLIB_INCLUDE_DIR}/zlib.h" ZLIB_H REGEX "^#define ZLIB_VERSION \"[^\"]*\"$")
+
+        string(REGEX REPLACE "^.*ZLIB_VERSION \"([0-9]+).*$" "\\1" ZLIB_VERSION_MAJOR "${ZLIB_H}")
+        string(REGEX REPLACE "^.*ZLIB_VERSION \"[0-9]+\\.([0-9]+).*$" "\\1" ZLIB_VERSION_MINOR  "${ZLIB_H}")
+        string(REGEX REPLACE "^.*ZLIB_VERSION \"[0-9]+\\.[0-9]+\\.([0-9]+).*$" "\\1" ZLIB_VERSION_PATCH "${ZLIB_H}")
+        set(ZLIB_VERSION_STRING "${ZLIB_VERSION_MAJOR}.${ZLIB_VERSION_MINOR}.${ZLIB_VERSION_PATCH}")
+
+        # only append a TWEAK version if it exists:
+        set(ZLIB_VERSION_TWEAK "")
+        if( "${ZLIB_H}" MATCHES "^.*ZLIB_VERSION \"[0-9]+\\.[0-9]+\\.[0-9]+\\.([0-9]+).*$")
+            set(ZLIB_VERSION_TWEAK "${CMAKE_MATCH_1}")
+            set(ZLIB_VERSION_STRING "${ZLIB_VERSION_STRING}.${ZLIB_VERSION_TWEAK}")
+        endif()
+
+        set(ZLIB_MAJOR_VERSION "${ZLIB_VERSION_MAJOR}")
+        set(ZLIB_MINOR_VERSION "${ZLIB_VERSION_MINOR}")
+        set(ZLIB_PATCH_VERSION "${ZLIB_VERSION_PATCH}")
+
+        set(ZLIB_INCLUDE_DIRS ${ZLIB_INCLUDE_DIR})
+    set(ZLIB_LIBRARIES ${ZLIB_LIBRARY})
+
         SET(ZLIB_LIBRARY ${ZLIB_LIBRARIES} CACHE INTERNAL "System zlib library")
         SET(WITH_ZLIB "system" CACHE STRING
           "Which zlib to use (possible values are 'bundled' or 'system')")
         SET(ZLIB_SOURCES "")
-      ELSE()
-        SET(ZLIB_FOUND FALSE CACHE INTERNAL "Zlib found but not usable")
-        MESSAGE(STATUS "system zlib found but not usable")
-      ENDIF()
-    ENDIF()
-    IF(NOT ZLIB_FOUND)
-      MYSQL_USE_BUNDLED_ZLIB()
-    ENDIF()
+    else()
+        SET(ZLIB_FIND_QUIETLY TRUE)
+        INCLUDE(FindZLIB)
+        IF(ZLIB_FOUND)
+         INCLUDE(CheckFunctionExists)
+          SET(CMAKE_REQUIRED_LIBRARIES z)
+          CHECK_FUNCTION_EXISTS(crc32 HAVE_CRC32)
+          CHECK_FUNCTION_EXISTS(compressBound HAVE_COMPRESSBOUND)
+          CHECK_FUNCTION_EXISTS(deflateBound HAVE_DEFLATEBOUND)
+          SET(CMAKE_REQUIRED_LIBRARIES)
+          IF(HAVE_CRC32 AND HAVE_COMPRESSBOUND AND HAVE_DEFLATEBOUND)
+            SET(ZLIB_LIBRARY ${ZLIB_LIBRARIES} CACHE INTERNAL "System zlib library")
+            SET(WITH_ZLIB "system" CACHE STRING
+              "Which zlib to use (possible values are 'bundled' or 'system')")
+            SET(ZLIB_SOURCES "")
+          ELSE()
+            SET(ZLIB_FOUND FALSE CACHE INTERNAL "Zlib found but not usable")
+            MESSAGE(STATUS "system zlib found but not usable")
+          ENDIF()
+        ENDIF()
+        IF(NOT ZLIB_FOUND)
+          MYSQL_USE_BUNDLED_ZLIB()
+        ENDIF()
+    endif()
   ENDIF()
   SET(HAVE_COMPRESS 1)
 ENDMACRO()
