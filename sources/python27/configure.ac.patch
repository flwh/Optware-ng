--- Python-2.7.9/configure.ac.orig	2014-12-10 18:00:00.000000000 +0200
+++ Python-2.7.9/configure.ac	2015-01-26 19:25:47.663422262 +0200
@@ -5,7 +5,6 @@
 # Set VERSION so we only need to edit in one place (i.e., here)
 m4_define(PYTHON_VERSION, 2.7)
 
-AC_PREREQ(2.65)
 
 AC_REVISION($Revision$)
 AC_INIT(python, PYTHON_VERSION, http://bugs.python.org/)
@@ -19,29 +18,6 @@
 # pybuilddir.txt will be created by --generate-posix-vars in the Makefile
 rm -f pybuilddir.txt
 
-if test "$cross_compiling" = yes; then
-    AC_MSG_CHECKING([for python interpreter for cross build])
-    if test -z "$PYTHON_FOR_BUILD"; then
-        for interp in python$PACKAGE_VERSION python2 python; do
-	    which $interp >/dev/null 2>&1 || continue
-	    if $interp -c 'import sys;sys.exit(not (sys.version_info@<:@:2@:>@ >= (2,7) and sys.version_info@<:@0@:>@ < 3))'; then
-	        break
-	    fi
-            interp=
-	done
-        if test x$interp = x; then
-	    AC_MSG_ERROR([python$PACKAGE_VERSION interpreter not found])
-	fi
-        AC_MSG_RESULT($interp)
-	PYTHON_FOR_BUILD='_PYTHON_PROJECT_BASE=$(abs_builddir) _PYTHON_HOST_PLATFORM=$(_PYTHON_HOST_PLATFORM) PYTHONPATH=$(shell test -f pybuilddir.txt && echo $(abs_builddir)/`cat pybuilddir.txt`:)$(srcdir)/Lib:$(srcdir)/Lib/$(PLATDIR) '$interp
-    fi
-elif test "$cross_compiling" = maybe; then
-    AC_MSG_ERROR([Cross compiling required --host=HOST-TUPLE and --build=ARCH])
-else
-    PYTHON_FOR_BUILD='./$(BUILDPYTHON) -E'
-fi
-AC_SUBST(PYTHON_FOR_BUILD)
-
 dnl Ensure that if prefix is specified, it does not end in a slash. If
 dnl it does, we get path names containing '//' which is both ugly and
 dnl can cause trouble.
@@ -51,6 +27,11 @@
     prefix=`echo "$prefix" | sed -e 's/\/$//g'`
 fi    
 
+# find compiler while respecting --host setting
+AC_CANONICAL_HOST()
+AC_CHECK_TOOLS(CC,gcc cc)
+AC_CHECK_TOOLS(CXX,g++ c++)
+
 dnl This is for stuff that absolutely must end up in pyconfig.h.
 dnl Please use pyport.h instead, if possible.
 AH_TOP([
@@ -1055,7 +1036,7 @@
 	    STRICT_PROTO="-Wstrict-prototypes"
 	fi
         # For gcc 4.x we need to use -fwrapv so lets check if its supported
-        if "$CC" -v --help 2>/dev/null |grep -- -fwrapv > /dev/null; then
+        if "$TARGET_CC" -v --help 2>/dev/null |grep -- -fwrapv > /dev/null; then
            WRAP="-fwrapv"
         fi
 
@@ -3328,13 +3309,13 @@
 [
 if test "${enable_ipv6+set}" = set; then
   ac_cv_buggy_getaddrinfo="no -- configured with --(en|dis)able-ipv6"
+  AC_MSG_RESULT($ac_cv_buggy_getaddrinfo)
 else
-  ac_cv_buggy_getaddrinfo=yes
+  AC_MSG_RESULT(cross compiling: assume good)
+  ac_cv_buggy_getaddrinfo=no
 fi]))
 fi
 
-AC_MSG_RESULT($ac_cv_buggy_getaddrinfo)
-
 if test $have_getaddrinfo = no -o "$ac_cv_buggy_getaddrinfo" = yes
 then
 	if test $ipv6 = yes
@@ -4567,6 +4548,25 @@
 AC_MSG_RESULT($ENSUREPIP)
 AC_SUBST(ENSUREPIP)
 
+AC_SUBST(BUILDPYTHON)
+AC_SUBST(BUILDPGEN)
+AC_SUBST(CROSS_COMPILE)
+if [[ $build != $host ]]; then
+    AC_MSG_NOTICE(Cross compiling: Configuring build python)
+    absconfigcommand=$(pwd)/$0
+    mkdir -p buildpython27
+    cd buildpython27
+    AS="" LD="" CC="" CXX="" AR="" STRIP="" RANLIB="" LDFLAGS="" CPPFLAGS="" $absconfigcommand --prefix=$prefix
+    cd ..
+    BUILDPYTHON='buildpython27/python$(BUILDEXE)'
+    BUILDPGEN='buildpython27/Parser/pgen$(BUILDEXE)'
+    CROSS_COMPILE=yes
+else
+    BUILDPYTHON='$(HOSTPYTHON)'
+    BUILDPGEN='$(HOSTPGEN)'
+    CROSS_COMPILE=no
+fi
+
 # generate output files
 AC_CONFIG_FILES(Makefile.pre Modules/Setup.config Misc/python.pc)
 AC_CONFIG_FILES([Modules/ld_so_aix], [chmod +x Modules/ld_so_aix])
